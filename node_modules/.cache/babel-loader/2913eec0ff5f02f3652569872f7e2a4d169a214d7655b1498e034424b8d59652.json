{"ast":null,"code":"import toast from \"react-hot-toast\";\nexport const showToast = (message, type = \"error\", duration = 4000) => {\n  toast[type](message, {\n    duration\n  });\n};\nexport const errorHandler = error => {\n  var _error$reason;\n  showToast(error !== null && error !== void 0 && (_error$reason = error.reason) !== null && _error$reason !== void 0 && _error$reason.length ? error === null || error === void 0 ? void 0 : error.reason : \"Something went wrong, Try again after some time.\");\n};\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, \"0\");\n}\nexport function convertMsToTime(ms) {\n  if (!ms) {\n    return \"\";\n  }\n  let seconds = Math.floor(ms / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  seconds = seconds % 60;\n  minutes = minutes % 60;\n  hours = hours % 24;\n  if (!hours) {\n    return `${padTo2Digits(minutes)} min ${padTo2Digits(seconds)} sec`;\n  } else {\n    return `${padTo2Digits(hours)} hr ${padTo2Digits(minutes)} min`;\n  }\n}","map":{"version":3,"names":["toast","showToast","message","type","duration","errorHandler","error","_error$reason","reason","length","padTo2Digits","num","toString","padStart","convertMsToTime","ms","seconds","Math","floor","minutes","hours"],"sources":["D:/DOWNLOAD-EDIT/LATER DO/P-Qtify-main/qtify/src/config/helper-methods.js"],"sourcesContent":["import toast from \"react-hot-toast\";\n\nexport const showToast = (message, type = \"error\", duration = 4000) => {\n\ttoast[type](message, { duration });\n};\n\nexport const errorHandler = (error) => {\n\tshowToast(\n\t\terror?.reason?.length\n\t\t\t? error?.reason\n\t\t\t: \"Something went wrong, Try again after some time.\"\n\t);\n};\n\nfunction padTo2Digits(num) {\n\treturn num.toString().padStart(2, \"0\");\n}\n\nexport function convertMsToTime(ms) {\n\tif (!ms) {\n\t\treturn \"\";\n\t}\n\n\tlet seconds = Math.floor(ms / 1000);\n\tlet minutes = Math.floor(seconds / 60);\n\tlet hours = Math.floor(minutes / 60);\n\n\tseconds = seconds % 60;\n\tminutes = minutes % 60;\n\thours = hours % 24;\n\n\tif (!hours) {\n\t\treturn `${padTo2Digits(minutes)} min ${padTo2Digits(seconds)} sec`;\n\t} else {\n\t\treturn `${padTo2Digits(hours)} hr ${padTo2Digits(minutes)} min`;\n\t}\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;AAEnC,OAAO,MAAMC,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,GAAG,OAAO,EAAEC,QAAQ,GAAG,IAAI,KAAK;EACtEJ,KAAK,CAACG,IAAI,CAAC,CAACD,OAAO,EAAE;IAAEE;EAAS,CAAC,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA,IAAAC,aAAA;EACtCN,SAAS,CACRK,KAAK,aAALA,KAAK,gBAAAC,aAAA,GAALD,KAAK,CAAEE,MAAM,cAAAD,aAAA,eAAbA,aAAA,CAAeE,MAAM,GAClBH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,MAAM,GACb,kDACJ,CAAC;AACF,CAAC;AAED,SAASE,YAAYA,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AACvC;AAEA,OAAO,SAASC,eAAeA,CAACC,EAAE,EAAE;EACnC,IAAI,CAACA,EAAE,EAAE;IACR,OAAO,EAAE;EACV;EAEA,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,EAAE,GAAG,IAAI,CAAC;EACnC,IAAII,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,IAAII,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,OAAO,GAAG,EAAE,CAAC;EAEpCH,OAAO,GAAGA,OAAO,GAAG,EAAE;EACtBG,OAAO,GAAGA,OAAO,GAAG,EAAE;EACtBC,KAAK,GAAGA,KAAK,GAAG,EAAE;EAElB,IAAI,CAACA,KAAK,EAAE;IACX,OAAQ,GAAEV,YAAY,CAACS,OAAO,CAAE,QAAOT,YAAY,CAACM,OAAO,CAAE,MAAK;EACnE,CAAC,MAAM;IACN,OAAQ,GAAEN,YAAY,CAACU,KAAK,CAAE,OAAMV,YAAY,CAACS,OAAO,CAAE,MAAK;EAChE;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}